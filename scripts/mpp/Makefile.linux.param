# use C01 to indicate uclibc, C02 to indicate glibc, C05 to indicate LiteOS.
ifeq ($(FPGA),n)
    ifeq ($(LIBC),glibc)
        export CVER?=.C$(ASIC_FLAG)2
    else
        export CVER?=.C$(ASIC_FLAG)1
    endif
else
    ifeq ($(LIBC),glibc)
    export CVER?=.C$(FPGA_FLAG)2
else
    export CVER?=.C$(FPGA_FLAG)1
    endif
endif

##############################################################################
# Allocated the kernel position
ifeq ($(MPP_BUILD), y)
    export KERNEL_ROOT?=$(WORK_PATH)/osdrv$(OT_SUBARCH)$(CVER)/open_source/linux/$(KERNEL_NAME)
else
    export KERNEL_ROOT?=$(OPEN_SOURCE_PATH)/linux/$(KERNEL_NAME)
endif
export OSDRV_PATH:=$(KERNEL_ROOT)/../../..

##############################################################################

# Define cross compiler

export CC:=$(CROSS)gcc
export CXX:=$(CROSS)g++
export AR:=$(CROSS)ar

export REL_INC ?= $(REL_DIR)/include
export REL_LIB ?= $(REL_DIR)/lib
export REL_KO  ?= $(REL_DIR)/ko
export REL_OBJ ?= $(REL_DIR)/obj
export REL_INI ?= $(REL_DIR)/init


LIBS_LD_CFLAGS += -ldl -rdynamic
MPP_CFLAGS += -Wno-date-time
DRV_CFLAGS += -Wno-date-time

ifeq ($(OT_SUBARCH), ss626v100)
ifeq ($(MPP_BUILD), y)
    export KBUILD_EXTRA_SYMBOLS += $(TEMP_PATH)/Module_5_10.symvers
else
    export KBUILD_EXTRA_SYMBOLS += $(REL_OBJ)/Module_5_10.symvers
endif
else
export KBUILD_EXTRA_SYMBOLS += $(TEMP_PATH)/Module.symvers
endif
